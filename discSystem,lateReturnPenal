import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RentalManagerWithReports {
    private static final double LATE_PENALTY_PER_DAY = 20.0;
    private Map<String, Customer> customers;
    private List<RentalRecord> rentalRecords;

    public RentalManagerWithReports() {
        customers = new HashMap<>();
        rentalRecords = new ArrayList<>();
    }

    // Add a customer
    public void addCustomer(String name, String customerId, String phone, String address) {
        customers.put(customerId, new Customer(name, customerId, phone, address));
    }

    // Rent a vehicle
    public void rentVehicle(String customerId, String plateNumber, double pricePerDay, int rentalDays) {
        Customer customer = customers.get(customerId);
        if (customer != null) {
            double totalCost = calculateTotalWithDiscount(pricePerDay, rentalDays);
            RentalRecord record = new RentalRecord(customer, plateNumber, rentalDays, totalCost);
            rentalRecords.add(record);
            System.out.printf("Vehicle rented successfully for %d days. Total cost: RM%.2f%n", rentalDays, totalCost);
        } else {
            System.out.println("Customer not found!");
        }
    }

    // Return a vehicle
    public void returnVehicle(String plateNumber, int daysLate) {
        for (RentalRecord record : rentalRecords) {
            if (record.getPlateNumber().equals(plateNumber) && !record.isReturned()) {
                record.setReturned(true);
                record.setLateDays(daysLate);
                double penalty = calculateLatePenalty(record);
                record.setTotalCost(record.getTotalCost() + penalty);
                System.out.printf("Vehicle returned. Penalty for %d late days: RM%.2f%n", daysLate, penalty);
                return;
            }
        }
        System.out.println("Rental record not found!");
    }

    // Calculate total with discount
    public double calculateTotalWithDiscount(double pricePerDay, int rentalDays) {
        double discountRate = 0;
        if (rentalDays > 7) {
            discountRate = 0.10; // 10% discount for rentals > 7 days
        }
        return pricePerDay * rentalDays * (1 - discountRate);
    }

    // Calculate late return penalty
    public double calculateLatePenalty(RentalRecord record) {
        return record.getLateDays() * LATE_PENALTY_PER_DAY;
    }

    // Generate report
    public void generateReport() {
        System.out.println("\nRental Report:");
        for (RentalRecord record : rentalRecords) {
            System.out.println(record);
        }
    }

    // Inner classes for Customer and RentalRecord
    class Customer {
        private String name;
        private String customerId;
        private String phone;
        private String address;

        public Customer(String name, String customerId, String phone, String address) {
            this.name = name;
            this.customerId = customerId;
            this.phone = phone;
            this.address = address;
        }

        @Override
        public String toString() {
            return String.format("Customer: "+name+"\n Customer ID"+ customerId+"\n Phone: "+phone+"\n Address: "+ address);
        
        }
    }

    class RentalRecord {
        private Customer customer;
        private String plateNumber;
        private int rentalDays;
        private int lateDays;
        private boolean returned;
        private double totalCost;

        public RentalRecord(Customer customer, String plateNumber, int rentalDays, double totalCost) {
            this.customer = customer;
            this.plateNumber = plateNumber;
            this.rentalDays = rentalDays;
            this.lateDays = 0;
            this.returned = false;
            this.totalCost = totalCost;
        }

        public String getPlateNumber() {
            return plateNumber;
        }

        public boolean isReturned() {
            return returned;
        }

        public void setReturned(boolean returned) {
            this.returned = returned;
        }

        public int getLateDays() {
            return lateDays;
        }

        public void setLateDays(int lateDays) {
            this.lateDays = lateDays;
        }

        public double getTotalCost() {
            return totalCost;
        }

        public void setTotalCost(double totalCost) {
            this.totalCost = totalCost;
        }
       @Override
public String toString() {
    return "Customer:" + customer +
           "\nVehicle: " + plateNumber +
           " Days: " + rentalDays +
           " Late Days: " + lateDays +
           "\nReturned: " + returned;
}

        }
    }
}
 

      
